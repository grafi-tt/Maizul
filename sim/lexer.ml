# 1 "lexer.mll"
  
  open Parser

# 6 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\224\255\000\000\226\255\073\000\001\000\004\000\002\000\
    \002\000\006\000\002\000\006\000\015\000\096\000\159\000\001\000\
    \253\255\254\255\002\000\252\255\000\000\003\000\020\000\017\000\
    \002\000\249\255\030\000\239\255\234\255\001\000\023\000\020\000\
    \059\000\247\255\060\000\245\255\235\255\061\000\243\255\053\000\
    \063\000\241\255\085\000\228\255\238\255\064\000\236\255\082\000\
    \003\000\086\000\233\255\232\255\231\255\229\255\225\255\001\000\
    \252\255\253\255\003\000\014\000\255\255\254\255";
  Lexing.lex_backtrk = 
   "\000\000\255\255\031\000\255\255\028\000\025\000\031\000\031\000\
    \031\000\031\000\031\000\031\000\031\000\031\000\004\000\031\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\255\255\255\255\
    \005\000\255\255\015\000\255\255\255\255\255\255\255\255\255\255\
    \007\000\255\255\009\000\255\255\255\255\011\000\255\255\255\255\
    \013\000\255\255\255\255\255\255\255\255\018\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\003\000\003\000\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\000\000\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\000\000\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\000\000\255\255\
    \255\255\255\255\000\000\000\000\000\000\000\000\000\000\056\000\
    \000\000\000\000\255\255\255\255\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\018\000\018\000\018\000\018\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \018\000\000\000\018\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\054\000\059\000\017\000\061\000\000\000\002\000\
    \058\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\016\000\015\000\019\000\060\000\000\000\000\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\013\000\006\000\030\000\026\000\011\000\036\000\022\000\
    \051\000\049\000\005\000\025\000\010\000\053\000\008\000\007\000\
    \047\000\042\000\048\000\012\000\045\000\039\000\037\000\034\000\
    \009\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\028\000\029\000\023\000\024\000\027\000\
    \031\000\032\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\033\000\035\000\038\000\040\000\
    \041\000\046\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\021\000\043\000\052\000\050\000\
    \000\000\044\000\000\000\000\000\000\000\000\000\020\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\057\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\018\000\018\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\018\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\055\000\000\000\058\000\255\255\000\000\
    \055\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\015\000\059\000\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\029\000\020\000\000\000\010\000\021\000\
    \048\000\006\000\000\000\024\000\000\000\005\000\000\000\000\000\
    \006\000\008\000\006\000\000\000\007\000\009\000\010\000\011\000\
    \000\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\012\000\012\000\022\000\023\000\026\000\
    \030\000\031\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\032\000\034\000\037\000\039\000\
    \040\000\045\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\013\000\042\000\047\000\049\000\
    \255\255\042\000\255\255\255\255\255\255\255\255\013\000\014\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\055\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 12 "lexer.mll"
                     ( token lexbuf )
# 164 "lexer.ml"

  | 1 ->
# 13 "lexer.mll"
                ( COMM )
# 169 "lexer.ml"

  | 2 ->
# 14 "lexer.mll"
                ( COL )
# 174 "lexer.ml"

  | 3 ->
# 15 "lexer.mll"
                ( EOL )
# 179 "lexer.ml"

  | 4 ->
let
# 16 "lexer.mll"
                      x
# 185 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 16 "lexer.mll"
                        ( NUM (int_of_string x) )
# 189 "lexer.ml"

  | 5 ->
# 17 "lexer.mll"
                ( ADDQU )
# 194 "lexer.ml"

  | 6 ->
# 18 "lexer.mll"
                ( ADDQUI )
# 199 "lexer.ml"

  | 7 ->
# 19 "lexer.mll"
                ( SUBQU )
# 204 "lexer.ml"

  | 8 ->
# 20 "lexer.mll"
                ( SUBQUI )
# 209 "lexer.ml"

  | 9 ->
# 21 "lexer.mll"
                ( EQ )
# 214 "lexer.ml"

  | 10 ->
# 22 "lexer.mll"
                ( EQI )
# 219 "lexer.ml"

  | 11 ->
# 23 "lexer.mll"
                ( LESS )
# 224 "lexer.ml"

  | 12 ->
# 24 "lexer.mll"
                ( LESSI )
# 229 "lexer.ml"

  | 13 ->
# 25 "lexer.mll"
                ( XOR )
# 234 "lexer.ml"

  | 14 ->
# 26 "lexer.mll"
                ( XORI )
# 239 "lexer.ml"

  | 15 ->
# 27 "lexer.mll"
                ( AND )
# 244 "lexer.ml"

  | 16 ->
# 28 "lexer.mll"
                ( ANDI )
# 249 "lexer.ml"

  | 17 ->
# 29 "lexer.mll"
                ( NOT )
# 254 "lexer.ml"

  | 18 ->
# 30 "lexer.mll"
                ( OR )
# 259 "lexer.ml"

  | 19 ->
# 31 "lexer.mll"
                ( ORI )
# 264 "lexer.ml"

  | 20 ->
# 32 "lexer.mll"
                ( LD )
# 269 "lexer.ml"

  | 21 ->
# 33 "lexer.mll"
                ( ST )
# 274 "lexer.ml"

  | 22 ->
# 34 "lexer.mll"
                ( BEQ )
# 279 "lexer.ml"

  | 23 ->
# 35 "lexer.mll"
                ( BNE )
# 284 "lexer.ml"

  | 24 ->
# 36 "lexer.mll"
                ( BLT )
# 289 "lexer.ml"

  | 25 ->
# 37 "lexer.mll"
                ( J )
# 294 "lexer.ml"

  | 26 ->
# 38 "lexer.mll"
                ( JL )
# 299 "lexer.ml"

  | 27 ->
# 39 "lexer.mll"
                ( NOP )
# 304 "lexer.ml"

  | 28 ->
let
# 40 "lexer.mll"
                      l
# 310 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 40 "lexer.mll"
                         ( LABEL l )
# 314 "lexer.ml"

  | 29 ->
# 41 "lexer.mll"
                ( raise End_of_file )
# 319 "lexer.ml"

  | 30 ->
# 42 "lexer.mll"
                ( comment lexbuf ; token lexbuf )
# 324 "lexer.ml"

  | 31 ->
# 43 "lexer.mll"
                ( failwith "Unrecognized Character" )
# 329 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 55
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 45 "lexer.mll"
                ( () )
# 340 "lexer.ml"

  | 1 ->
# 46 "lexer.mll"
                ( comment lexbuf ; comment lexbuf )
# 345 "lexer.ml"

  | 2 ->
# 47 "lexer.mll"
                ( raise End_of_file )
# 350 "lexer.ml"

  | 3 ->
# 48 "lexer.mll"
                ( comment lexbuf )
# 355 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

;;

